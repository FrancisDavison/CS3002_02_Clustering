mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store <- data.frame()
#kmeans
for(k in min:max)
{
k=3
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk = WK_R(Kgroaups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store <- rbind(wk_store, (wk_temp <- data.frame(k,wk))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store <- data.frame()
#kmeans
for(k in min:max)
{
k=3
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store <- rbind(wk_store, (wk_temp <- data.frame(k,wk))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
View(wk_store)
mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store <- data.frame()
#kmeans
for(k in min:max)
{
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store <- rbind(wk_store, (wk_temp <- data.frame(k,wk))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store_km <- data.frame()
wk_store_ha <- data.frame()
wk_store_hc <- data.frame()
wk_store_hs <- data.frame()
#kmeans
for(k in min:max)
{
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk_km = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_km <- rbind(wk_store_km, (wk_temp <- data.frame(k,wk_km))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store_km <- data.frame()
wk_store_ha <- data.frame()
wk_store_hc <- data.frame()
wk_store_hs <- data.frame()
#kmeans
for(k in min:max)
{
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk_km = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_km <- rbind(wk_store_km, (wk_temp <- data.frame(k,wk_km))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
#hierarchical
for(k in min:max)
{
d <- dist(mydata, method="euclidian") #generate distance matrix of euclidian values between datapoints
fit <- hclust(d, method=linkage_measure) #performs clustering with linkage measure defined above
plot(fit) #plots dendrogram
Hgroups <- cutree(fit, k) #cuts dendrogram into k clusters
rect.hclust(fit, k, border="pink") #places pink borders to display k clusters
plot(mydata, col=Hgroups, main=bquote("hierarchical clustering," ~.(linkage_measure)~"Linkage, k="~.(k))) #plots scatterplot with colour coded clusters
wk_ha = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_ha <- rbind(wk_store_ha, (wk_temp <- data.frame(k,wk_ha))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store_km <- data.frame()
wk_store_ha <- data.frame()
wk_store_hc <- data.frame()
wk_store_hs <- data.frame()
#kmeans
for(k in min:max)
{
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk_km = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_km <- rbind(wk_store_km, (wk_temp <- data.frame(k,wk_km))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
#hierarchical
for(k in min:max)
{
d <- dist(mydata, method="euclidian") #generate distance matrix of euclidian values between datapoints
fit <- hclust(d, method="average") #performs clustering with linkage measure defined above
plot(fit) #plots dendrogram
Hgroups <- cutree(fit, k) #cuts dendrogram into k clusters
rect.hclust(fit, k, border="pink") #places pink borders to display k clusters
plot(mydata, col=Hgroups, main=bquote("hierarchical clustering," ~.(linkage_measure)~"Linkage, k="~.(k))) #plots scatterplot with colour coded clusters
wk_ha = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_ha <- rbind(wk_store_ha, (wk_temp <- data.frame(k,wk_ha))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
mydata = read.csv('.\\seeds_dataset.csv') #imports the data from seeds_dataset.csv
truedata = read.csv('.\\seeds_real.csv', header=F)
source(".\\WK_R.R") #imports Weighted Kappa code to use as source
min=2 #defines minimum value of k, cannot be less than 2
max=8 #defines maximum value of k
wk_store_km <- data.frame()
wk_store_ha <- data.frame()
wk_store_hc <- data.frame()
wk_store_hs <- data.frame()
#kmeans
for(k in min:max)
{
fit<- kmeans(mydata, k) #calculates kmeans for k clusters
aggregate(mydata,by=list(fit$cluster),FUN=mean) #gets statistics on clusters using mean value for each variable
Kgroups = fit$cluster #assigns value to Kgroups
plot(mydata, col=Kgroups, main=bquote("Kmeans, k="~.(k))) #plots scatterplot of mydata with Kgroups_n to colour code
wk_km = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_km <- rbind(wk_store_km, (wk_temp <- data.frame(k,wk_km))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
#hierarchical
for(k in min:max)
{
d <- dist(mydata, method="euclidian") #generate distance matrix of euclidian values between datapoints
fit <- hclust(d, method="average") #performs clustering with linkage measure defined above
plot(fit) #plots dendrogram
Hgroups <- cutree(fit, k) #cuts dendrogram into k clusters
rect.hclust(fit, k, border="pink") #places pink borders to display k clusters
plot(mydata, col=Hgroups, main=bquote("hierarchical clustering, Average Linkage, k="~.(k))) #plots scatterplot with colour coded clusters
wk_ha = WK_R(Kgroups, truedata$V1) #sets wk value to the value returned by WK_R code
wk_store_ha <- rbind(wk_store_ha, (wk_temp <- data.frame(k,wk_ha))) #creates wk_temp dataframe, adds k and wk to wk_temp, binds wk_temp to bottom of wk_store
}
plot(wk_store, main="wk against k") #plots the different wk values against their respective k value
